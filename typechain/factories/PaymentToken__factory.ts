/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PaymentToken } from "../PaymentToken";

export class PaymentToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PaymentToken> {
    return super.deploy(overrides || {}) as Promise<PaymentToken>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PaymentToken {
    return super.attach(address) as PaymentToken;
  }
  connect(signer: Signer): PaymentToken__factory {
    return super.connect(signer) as PaymentToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentToken {
    return new Contract(address, _abi, signerOrProvider) as PaymentToken;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600381526020016244414960e81b8152506040518060400160405280600381526020016244414960e81b81525081600390805190602001906200006292919062000183565b5080516200007890600490602084019062000183565b50506005805460ff1916601217905550620000a2336d314dc6448d9338c15b0a00000000620000a8565b620002cb565b6001600160a01b038216620000da5760405162461bcd60e51b8152600401620000d19062000229565b60405180910390fd5b620000e8600083836200017e565b80600254620000f8919062000269565b6002556001600160a01b0382166000908152602081905260409020546200012190829062000269565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200017290859062000260565b60405180910390a35050565b505050565b82805462000191906200028e565b90600052602060002090601f016020900481019282620001b5576000855562000200565b82601f10620001d057805160ff191683800117855562000200565b8280016001018555821562000200579182015b8281111562000200578251825591602001919060010190620001e3565b506200020e92915062000212565b5090565b5b808211156200020e576000815560010162000213565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200028957634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680620002a357607f821691505b60208210811415620002c557634e487b7160e01b600052602260045260246000fd5b50919050565b61089880620002db6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c3919061066a565b60405180910390f35b6100df6100da366004610636565b610222565b6040516100c3919061065f565b6100f461023f565b6040516100c391906107cb565b6100df61010f3660046105fb565b610245565b61011c6102ba565b6040516100c391906107d4565b6100df610137366004610636565b6102c3565b6100f461014a3660046105a8565b610312565b6100b6610331565b6100df610165366004610636565b610340565b6100df610178366004610636565b61038f565b6100f461018b3660046105c9565b6103a3565b60606003805461019f90610811565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb90610811565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600061023661022f6103ce565b84846103d2565b50600192915050565b60025490565b600061025284848461048f565b6102b08461025e6103ce565b6001600160a01b038716600090815260016020526040812086916102806103ce565b6001600160a01b03166001600160a01b03168152602001908152602001600020546102ab91906107fa565b6103d2565b5060019392505050565b60055460ff1690565b60006102366102d06103ce565b8484600160006102de6103ce565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546102ab91906107e2565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f90610811565b600061023661034d6103ce565b84846001600061035b6103ce565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546102ab91906107fa565b600061023661039c6103ce565b848461048f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104015760405162461bcd60e51b81526004016103f890610787565b60405180910390fd5b6001600160a01b0382166104275760405162461bcd60e51b81526004016103f890610700565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104829085906107cb565b60405180910390a3505050565b6001600160a01b0383166104b55760405162461bcd60e51b81526004016103f890610742565b6001600160a01b0382166104db5760405162461bcd60e51b81526004016103f8906106bd565b6104e683838361058c565b6001600160a01b03831660009081526020819052604090205461050a9082906107fa565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461053a9082906107e2565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104829085906107cb565b505050565b80356001600160a01b038116811461032c57600080fd5b6000602082840312156105b9578081fd5b6105c282610591565b9392505050565b600080604083850312156105db578081fd5b6105e483610591565b91506105f260208401610591565b90509250929050565b60008060006060848603121561060f578081fd5b61061884610591565b925061062660208501610591565b9150604084013590509250925092565b60008060408385031215610648578182fd5b61065183610591565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156106965785810183015185820160400152820161067a565b818111156106a75783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b90815260200190565b60ff91909116815260200190565b600082198211156107f5576107f561084c565b500190565b60008282101561080c5761080c61084c565b500390565b60028104600182168061082557607f821691505b6020821081141561084657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203b74bca9695adf7b18d98fb5a475fb1b790de2e3d1bf8c92906ad420c3e4491d64736f6c63430008000033";
